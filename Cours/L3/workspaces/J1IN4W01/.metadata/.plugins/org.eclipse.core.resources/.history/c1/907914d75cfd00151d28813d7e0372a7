import ij.*;
import ij.gui.*;

import java.awt.*;

import ij.plugin.filter.PlugInFilter;
import ij.process.*;

public class Selection_Couleur implements PlugInFilter {

  int couleurVersNG(int couleur) {
    int red = (couleur & 0xFF0000) >> 16;
    int green = (couleur & 0x00FF00) >> 8;
    int blue = (couleur & 0x0000FF);
    red *= 0.3;
    green *= 0.59;
    blue *= 0.11;
    int sommecouleur=red+green+blue;
    return ((int) ((sommecouleur<<16)+(sommecouleur<<8)+sommecouleur));
  }
  
  double distance(int couleur1, int couleur2) {
    int r1 = (couleur1 & 0xFF0000) >> 16;
    int g1 = (couleur1 & 0x00FF00) >> 8;
    int b1 = (couleur1 & 0x0000FF);
    int r2 = (couleur2 & 0xFF0000) >> 16;
    int g2 = (couleur2 & 0x00FF00) >> 8;
    int b2 = (couleur2 & 0x0000FF);
    int distance = (r1 - r2) * (r1 - r2) + (g1 - g2) * (g1 - g2) + (b1 - b2)
        * (b1 - b2);
    return ((double) distance);
  }

  double distanceHSB(int couleur1,int couleur2){
    float[] hsbvals1=new float[3];
    float[] hsbvals2=new float[3];
    Color.RGBtoHSB((couleur1 & 0xFF0000) >> 16,(couleur1 & 0x00FF00) >> 8,(couleur1 & 0x0000FF), hsbvals1);
    Color.RGBtoHSB((couleur2 & 0xFF0000) >> 16,(couleur2 & 0x00FF00) >> 8,(couleur2 & 0x0000FF), hsbvals2);
    double distance=Math.abs(hsbvals1[0]-hsbvals2[0]);
    return distance;
  }
  
  
  public void run(ImageProcessor ip) {
    ColorChooser cc = new ColorChooser("couleur de référence", Color.yellow,
        true);
    Color cRef = cc.getColor();
    if (cRef == null) {
      IJ.error("PlugIn cancelled");
      return;
    }
    int couleurRef = (cRef.getRed() << 16) + (cRef.getGreen() << 8)
        + cRef.getBlue();
    int distanceMax = 1200; // seuil à choisir
    double disMax=0.2;
    int width = ip.getWidth();
    int height = ip.getHeight();
    int dcouleur = 0;
    int dcolor=0;//pour la teinte
    int couleur = 0;
   
      /*ImagePlus
     imR=NewImage.createRGBImage("image teinte",width,height,1,NewImage.FILL_BLACK); 
     ImageProcessor ipR=imR.getProcessor();*/
    
    for (int y = 0; y < height; y++) {
      for (int x = 0; x < width; x++) {
        couleur = ip.getPixel(x, y);
        //dcouleur = (int) distance(couleurRef, couleur);
        dcolor=(int) distanceHSB(couleurRef, couleur);
        /*if (dcouleur >distanceMax)
        ip.putPixel(x, y, couleurVersNG(couleur));*/
        if (dcolor >disMax)
          ip.putPixel(x, y, couleurVersNG(couleur));
        
      }
    }
    //imR.show();
  }
  public int setup(String arg, ImagePlus imp) {
    return DOES_RGB;
  }
}
